const mix = require('laravel-mix');
            require('mix-tailwindcss');
            require('laravel-mix-wp-blocks');
            require('laravel-mix-purgecss');
            require('laravel-mix-copy-watched');

const { whitelist, whitelistPatterns } = require('purgecss-with-wordpress');

/*
 |--------------------------------------------------------------------------
 | Mix Asset Management â€“ https://laravel-mix.com
 |--------------------------------------------------------------------------
 |
 | Mix provides a clean, fluent API for defining some Webpack build steps
 | for your Stage application. By default, we are compiling the Sass file
 | for your application, as well as bundling up your JS files.
 |
 */

// Public Path & Development Domain
mix.setPublicPath('./dist')
  .browserSync('tn-l.test');

// JavaScript
mix.js('resources/assets/scripts/app.js', 'scripts')
  .block('resources/assets/scripts/editor.js', 'scripts')
  .extract();

// Styles
mix.sass('resources/assets/styles/stage.scss', 'styles')
  .sass('resources/assets/styles/gutenberg/blocks.scss', 'styles/blocks')
  .sass('resources/assets/styles/gutenberg/blocks-editor.scss', 'styles/blocks')
  .sass('include/Customizer/assets/styles/customizer.scss', 'styles/customizer')
  .sass('include/Customizer/assets/styles/controls.scss', 'styles/customizer')
  .tailwind()
  .purgeCss();

// Assets
mix.copyWatched('resources/assets/images', 'dist/images')
  .copyWatched('resources/assets/icons', 'dist/icons')
  .copyWatched('resources/assets/fonts', 'dist/fonts')
  .copyWatched('resources/languages', 'dist/languages');

// Customizer Scripts
mix.copyWatched('include/Customizer/assets/scripts', 'dist/scripts/customizer');

// Autoload
mix.autoload({
  jquery: ['$', 'window.jQuery'],
});

// Options
mix.options({
  processCssUrls: false,
});

// Generate source maps when not in production
mix.sourceMaps(false, 'source-map')
  .version();

// Remove unused styles in production
mix.purgeCss({
  content: [
    './resources/views/**/*.php',
    './resources/assets/**/*.js',
  ],
  defaultExtractor: content => content.match(/[A-Za-z0-9-_:/]+/g) || [],

  /*
   | Add classes, IDs, or selectors which do not exist in your views or
   | scripts. By default, We have whitelisted classes generated by WordPress.
   */
  whitelist: [
    'up',
    'down',
    ...whitelist,
  ],
  whitelistPatterns: [
    /^wp(-.*)?$/,
    /^is(-.*)?$/,
    /^has(-.*)?$/,
    /^align(.*)?$/,
    /^stage(-.*)?$/,
    /^hamburger(.*)?$/,
    ...whitelistPatterns,
  ],
});
